author: mongoose-os
description: A Mongoose OS app skeleton
version: 1.0

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

# Optional. List of tags for online search.
tags:
  - c

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

# config_schema:
#  - ["my_app", "o", {title: "My app custom settings"}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

config_schema:
  - ["app", "o", { title: "My app custom settings" }]
  - ["i2c.enable", true]

  - ["wifi.sta", "o", {title: "WiFi Station Config"}]
  - ["wifi.sta.enable", "b", {title: "Connect to existing WiFi"}]
  - ["wifi.sta.ssid", "s", "TCDwifi", {title: "SSID"}]
  - ["wifi.sta.pass", "s", "pw", {title: "Password", type: "password"}]
  - ["wifi.sta.user", "s", "user", {title: "Username for WPA-PEAP mode"}]
  - ["wifi.sta.anon_identity", "s", {title: "Anonymous identity for WPA mode"}]
  - ["wifi.sta.cert", "s", {title: "Client certificate for WPA-TTLS mode"}]
  - ["wifi.sta.key", "s", {title: "Client key for WPA-TTLS mode"}]
  - ["wifi.sta.ca_cert", "s", {title: "CA certificate for WPA-enterprise mode"}]
  - ["wifi.sta.ip", "s", {title: "Static IP Address"}]
  - ["wifi.sta.netmask", "s", {title: "Static Netmask"}]
  - ["wifi.sta.gw", "s", {title: "Static Default Gateway"}]
  - ["wifi.sta.nameserver", "s", {title: "DNS Server"}]
  - ["wifi.sta.dhcp_hostname", "s", {title: "Host name to include in DHCP requests"}]
  # Station configurations will be tried starting from sta_cfg_idx and each one that is enabled
  # will be given sta_connect_timeout seconds to connect. Successfully connected station's index
  # will be saved in sta_cfg_idx so next boot will start with previously used configuration.
  # Setting sta_connect_timeout to 0 will disable this logic.
  - ["wifi.sta_cfg_idx", "i", 0, {title: "WiFi station config index to use, 0, 1 or 2"}]
  - ["wifi.sta_connect_timeout", "i", 30, {title: "Timeout for connection, seconds"}]

libs:
  - origin: https://github.com/mongoose-os-libs/aws
  - origin: https://github.com/mongoose-os-libs/boards
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/mjs
  - origin: https://github.com/mongoose-os-libs/dht
  - origin: https://github.com/mongoose-os-libs/adc
  - origin: https://github.com/mongoose-os-libs/mqtt
  - origin: https://github.com/mongoose-os-libs/wifi

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-09-29
